<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OtI64hgAAAAASUVORK5CYII=
</value>
  </data>
</root>